@using TaskStatus = Calendar.Models.TaskStatus
@model IEnumerable<Calendar.Models.TaskWithStatus>
@if (!Model.Any())
{
    <h6 style="color:green">@ViewData["Message"]</h6>
}
else
{
    <div style="overflow: auto; height: @ViewData["Height"]">
        <table id="taskTable" class="table">
            <thead class="custom-thead">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TaskDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th class="text-center">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="taskRow">
                        <td class="taskName">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                           @*  @if (ViewData["PastDue"] == "true")
                            {
                                var data = new TaskStatus
                        {
                            Id = item.TaskStatusId,
                            GeneratedTaskId = item.GeneratedTaskId,
                            OriginalTaskId = item.OriginalTaskId,
                            BSEStatus = item.BSEStatus,
                            NSEStatus = item.NSEStatus,
                            MCXStatus = item.MCXStatus,
                            NCDEXStatus = item.NCDEXStatus,
                            CDSLStatus = item.CDSLStatus,
                            NSDLStatus = item.NSDLStatus,
                        };
                                <a asp-action="Create" asp-controller="TaskStatus" asp-route-generatedId="@item.GeneratedTaskId" asp-route-originalId="@item.OriginalTaskId">Update Status</a>
                            }
                            else if (ViewData["PastDue"] == "false")
                            { *@
                                @await Html.PartialAsync("../_TaskStatus", new TaskStatus
                                {
                                    Id = item.TaskStatusId,
                                    GeneratedTaskId = item.GeneratedTaskId,
                                    OriginalTaskId = item.OriginalTaskId,
                                    BSEStatus = item.BSEStatus,
                                    NSEStatus = item.NSEStatus,
                                    MCXStatus = item.MCXStatus,
                                    NCDEXStatus = item.NCDEXStatus,
                                    CDSLStatus = item.CDSLStatus,
                                    NSDLStatus = item.NSDLStatus,
                                }, ViewData)
                            @* } *@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

