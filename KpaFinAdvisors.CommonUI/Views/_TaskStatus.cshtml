@using KpaFinAdvisors.Common.Enums;
@using System.Security.Claims;
@model KpaFinAdvisors.Common.Models.TaskStatus

<table>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BSEStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NSEStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MCXStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NCDEXStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CDSLStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NSDLStatus)
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            string formMethod = string.Empty;
            if (Model.Id != 0)
            {
                formMethod = "Edit";
            }
            else
            {
                formMethod = "Create";
            }
            string userId = string.Empty;
            if (ViewData.ContainsKey("UserId"))
            {
                userId = ViewData["UserId"]?.ToString() ?? string.Empty;
            }
            else
            {
                userId = User.Claims.First(x => x.Type == ClaimTypes.SerialNumber).Value;
            }
        }
        <form asp-controller="TaskStatus" asp-action="@formMethod">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="UserId" value="@userId" />
            <input type="hidden" asp-for="OriginalTaskId" />
            <input type="hidden" asp-for="GeneratedTaskId" />
            <input type="hidden" asp-for="FormSubmittedFrom" value="@ViewData["FormSubmittedFrom"]" />
            @if (ViewData["PastDue"]?.ToString() == "false")
            {
            <tr>
                <td>
                    <select asp-for="BSEStatus" class="form-select @(Model.BSEStatus == TaskStatusEnum.Pending ? "red-border" : (Model.BSEStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="BSEStatus" class="text-danger"></span>
                </td>
                <td>
                    <select asp-for="NSEStatus" class="form-select @(Model.NSEStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NSEStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="NSEStatus" class="text-danger"></span>
                </td>
                <td>
                    <select asp-for="MCXStatus" class="form-select @(Model.MCXStatus == TaskStatusEnum.Pending ? "red-border" : (Model.MCXStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="MCXStatus" class="text-danger"></span>
                </td>
                <td>
                    <select asp-for="NCDEXStatus" class="form-select @(Model.NCDEXStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NCDEXStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="NCDEXStatus" class="text-danger"></span>
                </td>
                <td>
                    <select asp-for="CDSLStatus" class="form-select @(Model.CDSLStatus == TaskStatusEnum.Pending ? "red-border" : (Model.CDSLStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="CDSLStatus" class="text-danger"></span>
                </td>
                <td area-disabled="true">
                    <select asp-for="NSDLStatus" class="form-select @(Model.NSDLStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NSDLStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" asp-items="Html.GetEnumSelectList<TaskStatusEnum>()"></select>
                    <span asp-validation-for="NSDLStatus" class="text-danger"></span>
                </td>
                <td>&nbsp;</td>
                <td>
                    <input type="submit" value="Save" class="btn btn-primary" />
                </td>
            </tr>
            }
        </form>
        @if (ViewData["PastDue"]?.ToString() == "true")
        {
            <tr>
                <td>
                    <input asp-for="BSEStatus" class="form-select @(Model.BSEStatus == TaskStatusEnum.Pending ? "red-border" : (Model.BSEStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="BSEStatus" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="NSEStatus" class="form-select @(Model.NSEStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NSEStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="NSEStatus" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="MCXStatus" class="form-select @(Model.MCXStatus == TaskStatusEnum.Pending ? "red-border" : (Model.MCXStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="MCXStatus" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="NCDEXStatus" class="form-select @(Model.NCDEXStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NCDEXStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="NCDEXStatus" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="CDSLStatus" class="form-select @(Model.CDSLStatus == TaskStatusEnum.Pending ? "red-border" : (Model.CDSLStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="CDSLStatus" class="text-danger"></span>
                </td>
                <td area-disabled="true">
                    <input asp-for="NSDLStatus" class="form-select @(Model.NSDLStatus == TaskStatusEnum.Pending ? "red-border" : (Model.NSDLStatus == TaskStatusEnum.NotApplicable ? "blue-border" : "green-border"))" disabled />
                    <span asp-validation-for="NSDLStatus" class="text-danger"></span>
                </td>
                <td>&nbsp;</td>
                <td>
                    @if (formMethod == "Edit")
                    {
                        <a asp-action="@formMethod" class="btn btn-warning" asp-controller="TaskStatus" asp-route-id="@Model.Id" asp-route-redirectTo="Home">Due</a>
                    }
                    @if (formMethod == "Create")
                    {
                        <a asp-action="@formMethod" class="btn btn-warning" asp-controller="TaskStatus" asp-route-generatedId="@Model.GeneratedTaskId" asp-route-originalId="@Model.OriginalTaskId">Due</a>
                    }
                </td>
            </tr>

        }
    </tbody>
</table>
