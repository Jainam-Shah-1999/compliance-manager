@model KpaFinAdvisors.Common.Models.DueTaskList
@{
    ViewData["Title"] = "Home Page";
}
<div class="container-fluid">
    <div class="row">
        <div class="form-group col-2">
            <label for="taskNameFilter" class="control-label" data-toggle="tooltip" title="Search in this page">Find</label>
            <input type="text" class="form-control" id="taskNameFilter">
        </div>
        <div class="form-group col">
            @{
                ViewData["Page"] = "Home";
            }
            @await Html.PartialAsync("../_TaskFilter", model: null, ViewData)
        </div>
    </div>
</div>


<hr />
@*https://www.youtube.com/watch?v=6j5l--NEmrQ
*@

@if (Model.FilteredTasks.Any())
{
    <a asp-action="Index" asp-route-returnToHome="true">Turn off filter</a>
    <h5>Results: @Model.FilteredTasks.Count()</h5>
    ViewData["PastDue"] = "false";
    ViewData["Height"] = "100vh";
    ViewData["Message"] = "No result found";
    ViewData["FormSubmittedFrom"] = "StatusList";
    @await Html.PartialAsync("../_TaskList", Model.FilteredTasks, ViewData)
}
else
{
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" asp-action="Index" asp-controller="Home">Due Today
            <span class="badge bg-secondary">@Model.DueToday?.Count()</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Past Due
            <span class="badge bg-secondary">@Model.PastDue?.Count()</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">
                Due in a Week
                <span class="badge bg-secondary">@Model.DueThisWeek?.Count()</span>
            </a>
        </li>
    </ul>
    @* <h5>Past Due</h5>
    <div>
        @{
            ViewData["PastDue"] = "true";
            ViewData["Height"] = "150px";
            ViewData["Message"] = "No Dues";
            ViewData["FormSubmittedFrom"] = "StatusList";
        }
        @await Html.PartialAsync("../_TaskList", Model.PastDue, ViewData)
    </div>
    <hr />
    <h5>Due Today</h5>
    <div>
        @{
            ViewData["PastDue"] = "false";
            ViewData["Height"] = "150px";
            ViewData["Message"] = "No Dues";
            ViewData["FormSubmittedFrom"] = "StatusList";
        }
        @await Html.PartialAsync("../_TaskList", Model.DueToday, ViewData)
    </div>
    <hr />
    <h5>Due in a Week</h5> *@
    <div>
        @{
            ViewData["PastDue"] = "false";
            ViewData["Height"] = "46vh";
            ViewData["Message"] = "No Dues";
            ViewData["FormSubmittedFrom"] = "StatusList";
        }
        @await Html.PartialAsync("../_TaskList", Model.DueThisWeek, ViewData)
    </div>
}


@* <h5>Due This Month</h5>
<div>
    @await Html.PartialAsync("../_TaskList", Model.DueThisMonth)
</div>
<hr />
<h5>Due in Six Month</h5>
<div>
    @await Html.PartialAsync("../_TaskList", Model.DueNextSixMonth)
</div>
<hr />
<h5>Due in a Year</h5>
<div>
    @await Html.PartialAsync("../_TaskList", Model.DueThisYear)
</div> *@

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#taskNameFilter').on('input', function () {
                var filterValue = $(this).val().toLowerCase();

                $('.taskRow').each(function () {
                    var taskNameCell = $(this).find('.taskName');
                    var taskName = taskNameCell.text().toLowerCase();

                    if (taskName.includes(filterValue)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
        });
    </script>
}